-- Step 1: Create Staging Table
CREATE OR REPLACE TABLE sales_stg (
    sales_id NUMBER,
    product_id NUMBER,
    customer_id NUMBER,
    sales_amount NUMBER(10,2),
    sales_date DATE,
    region VARCHAR(50),
    update_timestamp TIMESTAMP_NTZ
);

CREATE OR REPLACE TABLE apple_sales_stg (
    sales_id NUMBER,
    customer_id NUMBER,
    product_name STRING,
    quantity NUMBER,
    unit_price NUMBER(10,2),
    sales_date DATE,
    update_timestamp TIMESTAMP_NTZ
);

INSERT INTO apple_sales_stg (sales_id, customer_id, product_name, quantity, unit_price, sales_date, update_timestamp)
VALUES 
    (1, 101, 'iPhone 14', 2, 999.99, '2025-05-01', CURRENT_TIMESTAMP()),
    (2, 102, 'iPad Pro', 1, 1099.00, '2025-05-02', CURRENT_TIMESTAMP()),
    (3, 103, 'MacBook Air', 1, 1249.50, '2025-05-03', CURRENT_TIMESTAMP()),
    (4, 104, 'Apple Watch Series 9', 3, 399.00, '2025-05-04', CURRENT_TIMESTAMP()),
    (5, 105, 'AirPods Pro', 2, 249.00, '2025-05-05', CURRENT_TIMESTAMP());



CREATE OR REPLACE TABLE apple_sales_history (
    sales_id NUMBER,
    customer_id NUMBER,
    product_name STRING,
    quantity NUMBER,
    unit_price NUMBER(10,2),
    sales_date DATE,
    update_timestamp TIMESTAMP_NTZ,
    start_time TIMESTAMP_NTZ,
    end_time TIMESTAMP_NTZ,
    current_flag BOOLEAN
);
    
-- Step 2: Insert Initial Data
INSERT INTO apple_sales_history (
    sales_id,
    customer_id,
    product_name,
    quantity,
    unit_price,
    sales_date,
    update_timestamp,
    start_time,
    end_time,
    current_flag
)
SELECT
    sales_id,
    customer_id,
    product_name,
    quantity,
    unit_price,
    sales_date,
    update_timestamp,
    update_timestamp AS start_time,
    TO_TIMESTAMP_NTZ('9999-12-31') AS end_time,
    TRUE AS current_flag
FROM apple_sales_stg;


select * from apple_sales_history;



CREATE OR REPLACE STREAM apple_sales_stg_stream 
ON TABLE apple_sales_stg 


select * from apple_sales_stg;
select * from apple_sales_history;
select * from apple_sales_stg_stream;

INSERT INTO apple_sales_stg (
    sales_id,
    customer_id,
    product_name,
    quantity,
    unit_price,
    sales_date,
    update_timestamp
)
VALUES 
    (70, 1070, 'Apple Watch', 2, 399.99, '2025-05-28', CURRENT_TIMESTAMP()),
    (80, 1080, 'AirPods Pro', 1, 249.99, '2025-05-28', CURRENT_TIMESTAMP()),
    (90, 1090, 'HomePod Mini', 1, 99.99, '2025-05-28', CURRENT_TIMESTAMP());
select * from apple_sales_stg order by sales_id;
  select * from apple_sales_stg_stream order by sales_id;  






UPDATE apple_sales_stg
SET 
    quantity = 2,
    unit_price = 1099.00,
    update_timestamp = CURRENT_TIMESTAMP()
WHERE sales_id = 1;

UPDATE apple_sales_stg
SET 
    product_name = 'iPad Air',
    unit_price = 749.00,
    update_timestamp = CURRENT_TIMESTAMP()
WHERE sales_id = 2

select * from apple_sales_stg_stream;

MERGE INTO apple_sales_history AS target
USING apple_sales_stg_stream AS source
ON 
    target.sales_id = source.sales_id
    AND target.customer_id = source.customer_id
    AND target.product_name = source.product_name
    AND target.quantity = source.quantity
    AND target.unit_price = source.unit_price
    AND target.sales_date = source.sales_date
    AND target.current_flag = TRUE

-- Step 1: Close current record when an update occurs
WHEN MATCHED AND source.METADATA$ACTION = 'DELETE' AND source.METADATA$ISUPDATE = TRUE THEN
UPDATE SET 
    target.end_time = CURRENT_TIMESTAMP(),
    target.current_flag = FALSE

-- Step 2: Insert new version of updated record
WHEN NOT MATCHED AND source.METADATA$ACTION = 'INSERT' AND source.METADATA$ISUPDATE = TRUE THEN
INSERT (
    sales_id,
    customer_id,
    product_name,
    quantity,
    unit_price,
    sales_date,
    update_timestamp,
    start_time,
    end_time,
    current_flag
)
VALUES (
    source.sales_id,
    source.customer_id,
    source.product_name,
    source.quantity,
    source.unit_price,
    source.sales_date,
    source.update_timestamp,
    source.update_timestamp,
    TO_TIMESTAMP_NTZ('9999-12-31 00:00:00'),
    TRUE
)

-- Step 3: Insert brand new record (not an update)
WHEN NOT MATCHED AND source.METADATA$ACTION = 'INSERT' AND source.METADATA$ISUPDATE = FALSE THEN
INSERT (
    sales_id,
    customer_id,
    product_name,
    quantity,
    unit_price,
    sales_date,
    update_timestamp,
    start_time,
    end_time,
    current_flag
)
VALUES (
    source.sales_id,
    source.customer_id,
    source.product_name,
    source.quantity,
    source.unit_price,
    source.sales_date,
    source.update_timestamp,
    source.update_timestamp,
    TO_TIMESTAMP_NTZ('9999-12-31 00:00:00'),
    TRUE
);


SELECT * FROM apple_sales_history where sales_id=1. --the end


UPDATE apple_sales_stg
SET 
    product_name = 'just to check',
    unit_price = 749.00,
    update_timestamp = CURRENT_TIMESTAMP()
WHERE sales_id = 1;
