create or replace database sales_stg_db;--Syntax error: unexpected ';'. (line 1)
create or replace schema sales_stg;

--scd1
CREATE OR REPLACE TABLE sales_stg (
     sales_id NUMBER,
     product_name VARCHAR(50),
     customer_id NUMBER,
     sales_amount NUMBER(10,2),
     sales_date DATE,
     update_timestamp TIMESTAMP_NTZ
);

-- Step 2: Insert Sample Data into Staging Table
INSERT INTO sales_stg VALUES
    (1, 'Laptop', 101, 1500.00, '2024-01-01', CURRENT_TIMESTAMP()),
    (2, 'Smartphone', 102, 800.50, '2024-01-02', CURRENT_TIMESTAMP()),
    (3, 'Tablet', 103, 450.75, '2024-01-03', CURRENT_TIMESTAMP()),
    (4, 'Headphones', 104, 120.99, '2024-01-04', CURRENT_TIMESTAMP()),
    (5, 'Smartwatch', 105, 250.25, '2024-01-05', CURRENT_TIMESTAMP());
    (6, 'iPhone 15', 1001, 999.99, '2025-05-25', CURRENT_TIMESTAMP),
    (7, 'MacBook Air M2', 1002, 1299.00, '2025-05-25', CURRENT_TIMESTAMP),
    (8, 'iPad Pro', 1003, 1099.50, '2025-05-25', CURRENT_TIMESTAMP),
    (9, 'AirPods Pro', 1004, 249.99, '2025-05-25', CURRENT_TIMESTAMP),
    (10, 'Apple Watch Series 9', 1005, 399.99, '2025-05-25', CURRENT_TIMESTAMP);
  select * from sales_stg;

  Step 3: Create the Target Table apple_sales

CREATE OR REPLACE TABLE apple_sales (
    sales_id NUMBER,
    product_name VARCHAR(50),
    customer_id NUMBER,
    sales_amount NUMBER(10,2),
    sales_date DATE,
    update_timestamp TIMESTAMP_NTZ,
    is_deleted VARCHAR(2) DEFAULT 'N'
);
--Step 4: Initial Load--You do not need to explicitly insert is_deleted because it defaults to 'N'.

INSERT INTO apple_sales (
    sales_id,
    product_name,
    customer_id,
    sales_amount,
    sales_date,
    update_timestamp
)
SELECT
    sales_id,
    product_name,
    customer_id,
    sales_amount,
    sales_date,
    update_timestamp
FROM sales_stg;

select * from  apple_sales; --10 recordes loaded --full load
select * from sales_stg; --10 records present


--Step: Create a Stream on sales_stg

CREATE OR REPLACE STREAM sales_stg_stream 
ON TABLE sales_stg 
APPEND_ONLY = FALSE;  -- Allows tracking of INSERTs, UPDATEs, and DELETEs

--Check Stream Contents
select * from sales_stg_stream ;


--testing stream works fine>?


INSERT INTO sales_stg (
    sales_id, product_name, customer_id, sales_amount, sales_date, update_timestamp
)
VALUES
    (20, 'iPhone 15', 1006, 999.99, '2025-05-26', CURRENT_TIMESTAMP),
    (26, 'MacBook Air M2', 1007, 1299.00, '2025-05-26', CURRENT_TIMESTAMP);

delete from sales_stg where sales_id = 20;
    -- Update sales_amount for sales_id 2 (MacBook Air M2)
UPDATE sales_stg
SET sales_amount = 9999.00,
    update_timestamp = CURRENT_TIMESTAMP
WHERE sales_id = 7;


select * from sales_stg;
--â€¢	Delete one existing record from apple_sales_stg.
DELETE FROM sales_stg
WHERE sales_id = 5;

--verify deletion 

SELECT * FROM sales_stg WHERE sales_id = 5;

select * from sales_stg_stream ;


 
MERGE INTO apple_sales T
USING sales_stg_stream S
ON (T.sales_id = S.sales_id) 
WHEN MATCHED AND (S.METADATA$ACTION='INSERT' AND S.METADATA$ISUPDATE='TRUE') THEN 
UPDATE SET 
    T.sales_id= S.sales_id,
    T.product_name = S.product_name,
    T.customer_id = S.customer_id,
    T.sales_amount = S.sales_amount,
    T.sales_date = S.sales_date,
    T.update_timestamp = S.update_timestamp
WHEN MATCHED AND (S.METADATA$ACTION='DELETE' AND S.METADATA$ISUPDATE='FALSE') THEN 
UPDATE SET T.is_deleted = 'Y'
WHEN NOT MATCHED THEN
INSERT (sales_id, customer_id, product_name,  sales_amount, sales_date, update_timestamp)
VALUES (S.sales_id, S.customer_id, S.  product_name,S.sales_amount, S.sales_date, S.update_timestamp);

select count(*) from apple_sales;
SELECT count(*) FROM sales_stg;

select * from sales_stg_stream;
delete from sales_stg where sales_id = 20;
select * from apple_sales;
